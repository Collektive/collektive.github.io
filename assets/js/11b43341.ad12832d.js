"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2256],{5293:t=>{t.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Collektive Documentation","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Getting Started","href":"/docs/gettingstarted","docId":"gettingstarted","unlisted":false},{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Aggregate Programming and Field Calculus","href":"/docs/introduction/aggregate-programming","docId":"introduction/aggregate-programming","unlisted":false},{"type":"link","label":"What is Collektive?","href":"/docs/introduction/what-is-collektive","docId":"introduction/what-is-collektive","unlisted":false}],"href":"/docs/category/introduction"},{"type":"category","label":"Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Usage","href":"/docs/tutorials/basic-usage","docId":"tutorials/basic-usage","unlisted":false},{"type":"link","label":"Using Collektive with Alchemist Simulator","href":"/docs/tutorials/collektive-and-alchemist","docId":"tutorials/collektive-and-alchemist","unlisted":false},{"type":"link","label":"Aggregate Operators and Field Operations","href":"/docs/tutorials/dsl-descriptions","docId":"tutorials/dsl-descriptions","unlisted":false},{"type":"link","label":"Standard Library Functions","href":"/docs/tutorials/stdlib-descriptions","docId":"tutorials/stdlib-descriptions","unlisted":false}],"href":"/docs/category/tutorial"},{"type":"category","label":"Simulation Setup and Execution","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Collektive with Alchemist Simulator","href":"/docs/about/","docId":"about/about","unlisted":false}],"href":"/docs/category/simulation-setup-and-execution"},{"type":"link","label":"Library Structure","href":"/docs/about-the-structure/","docId":"about-the-structure/about-the-structure","unlisted":false}]},"docs":{"about-the-structure/about-the-structure":{"id":"about-the-structure/about-the-structure","title":"Library Structure","description":"Project submodules","sidebar":"tutorialSidebar"},"about/about":{"id":"about/about","title":"Collektive with Alchemist Simulator","description":"Reproduce with containers (not recommended with the graphical simulation)","sidebar":"tutorialSidebar"},"gettingstarted":{"id":"gettingstarted","title":"Getting Started","description":"Collektive is composed of several independent components:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Collektive Documentation","description":"Index","sidebar":"tutorialSidebar"},"introduction/aggregate-programming":{"id":"introduction/aggregate-programming","title":"Aggregate Programming and Field Calculus","description":"The progressive increase in the number of interconnected devices, leads to a rise in the costs associated with maintaining distributed systems. This creates significant challenges in implementing software services on a global scale using the traditional approach of individually programming each agent. This situation drives the search for solutions aimed at improving the autonomy of computing systems and reducing their complexity.","sidebar":"tutorialSidebar"},"introduction/what-is-collektive":{"id":"introduction/what-is-collektive","title":"What is Collektive?","description":"Collektive is an open-source library designed to simplify the development of resilient and scalable distributed systems through the principles of Aggregate Programming.","sidebar":"tutorialSidebar"},"tutorials/basic-usage":{"id":"tutorials/basic-usage","title":"Basic Usage","description":"The library function neighboring is a aggregate operator and is used to observe the value of an expression [local] across neighboring nodes.","sidebar":"tutorialSidebar"},"tutorials/collektive-and-alchemist":{"id":"tutorials/collektive-and-alchemist","title":"Using Collektive with Alchemist Simulator","description":"Alchemist Simulator is a distributed systems simulation platform, particularly suited for aggregate programming. It allows you to model and simulate interactions between agents in complex environments, supporting different abstractions and programming paradigms.","sidebar":"tutorialSidebar"},"tutorials/dsl-descriptions":{"id":"tutorials/dsl-descriptions","title":"Aggregate Operators and Field Operations","description":"The aggregate operators and field operations present in Collektive are illustrated below.","sidebar":"tutorialSidebar"},"tutorials/stdlib-descriptions":{"id":"tutorials/stdlib-descriptions","title":"Standard Library Functions","description":"The standard library functions present in Collektive are illustrated below.","sidebar":"tutorialSidebar"}}}}')}}]);