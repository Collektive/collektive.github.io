"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6411],{9578:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"reference/about","title":"about","description":"Reproduce with containers (not recommended with the graphical simulation)","source":"@site/docs/reference/about.mdx","sourceDirName":"reference","slug":"/reference/about","permalink":"/docs/reference/about","draft":false,"unlisted":false,"editUrl":"https://github.com/Collektive/collektive/tree/master/site/docs/reference/about.mdx","tags":[],"version":"current","frontMatter":{"title":"about"},"sidebar":"tutorialSidebar","previous":{"title":"Reference","permalink":"/docs/category/reference"},"next":{"title":"About the structure","permalink":"/docs/category/about-the-structure"}}');var r=t(4848),a=t(8453);const l={title:"about"},o="How to simulate",s={},c=[{value:"Reproduce with containers (not recommended with the graphical simulation)",id:"reproduce-with-containers-not-recommended-with-the-graphical-simulation",level:2},{value:"Reproduce natively",id:"reproduce-natively",level:2},{value:"How to run <code>Tutorial &gt; Basic Usage</code> example",id:"how-to-run-tutorial--basic-usage-example",level:2},{value:"Natively",id:"natively",level:3},{value:"Running graphical simulations",id:"running-graphical-simulations",level:4},{value:"With containers",id:"with-containers",level:3},{value:"How to add new task",id:"how-to-add-new-task",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"how-to-simulate",children:"How to simulate"})}),"\n",(0,r.jsx)(n.h2,{id:"reproduce-with-containers-not-recommended-with-the-graphical-simulation",children:"Reproduce with containers (not recommended with the graphical simulation)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Install docker and docker-compose."}),"\n",(0,r.jsxs)(n.li,{children:["Run ",(0,r.jsx)(n.code,{children:"docker-compose up"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"TODO explanation of next steps"}),"\n",(0,r.jsx)(n.h2,{id:"reproduce-natively",children:"Reproduce natively"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Install a Gradle-compatible version of Java. Use the ",(0,r.jsx)(n.a,{href:"https://docs.gradle.org/current/userguide/compatibility.html",children:"Gradle/Java compatibility matrix"})," to learn which is the compatible version range. The version of Gradle used in this experiment can be found in the ",(0,r.jsx)(n.code,{children:"gradle-wrapper.properties"})," file located in the ",(0,r.jsx)(n.code,{children:"gradle/wrapper"})," folder."]}),"\n",(0,r.jsxs)(n.li,{children:["Install the version of Python indicated in ",(0,r.jsx)(n.code,{children:".python-version"})," file (or use pyenv) and run:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install --upgrade pip\npip install -r requirements.txt\n"})}),"\n","(only needed for the data plotter)."]}),"\n",(0,r.jsxs)(n.li,{children:["Launch either:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"./gradlew run<SimulationName>Batch"})," on Linux, MacOS, or Windows if a bash-compatible shell is available;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gradlew.bat run<SimulationName>Batch"})," on Windows cmd."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Once the experiment is finished, the results will be available in the ",(0,r.jsx)(n.code,{children:"data"})," folder if the alchemist extractors are defined in the YAML configuration file."]}),"\n",(0,r.jsxs)(n.li,{children:["Run the Python script in the ",(0,r.jsx)(n.code,{children:"plotter"})," folder to generate the graphs from the data in the ",(0,r.jsx)(n.code,{children:"data"})," folder."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"how-to-run-tutorial--basic-usage-example",children:["How to run ",(0,r.jsx)(n.code,{children:"Tutorial > Basic Usage"})," example"]}),"\n",(0,r.jsx)(n.h3,{id:"natively",children:"Natively"}),"\n",(0,r.jsxs)(n.p,{children:["You need to clone the ",(0,r.jsx)(n.a,{href:"https://github.com/Collektive/collektive-examples",children:"repository"})," on your pc, moving into the root folder and running the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./gradlew run<ExampleName>Batch\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Where ",(0,r.jsx)(n.code,{children:"<ExampleName>"})," is the name of the example you want to run in batch mode."]}),"\n",(0,r.jsx)(n.h4,{id:"running-graphical-simulations",children:"Running graphical simulations"}),"\n",(0,r.jsx)(n.p,{children:"It is possible to run also the graphical simulations with the Alchemist simulator."}),"\n",(0,r.jsx)(n.p,{children:"You can list the available simulations by running the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./gradlew tasks --all\n"})}),"\n",(0,r.jsx)(n.p,{children:'And it will list all the available tasks, including the ones for the graphical simulations in the section "Run Alchemist tasks", or:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./gradlew run<ExampleName>Graphic\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Where ",(0,r.jsx)(n.code,{children:"<ExampleName>"})," is the name of the example you want to run in Graphic mode."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["Note: to run a program with the Graphics mode, it is essential that the environment variable ",(0,r.jsx)(n.code,{children:"env:CI"})," is set to false."]})}),"\n",(0,r.jsx)(n.h3,{id:"with-containers",children:"With containers"}),"\n",(0,r.jsx)(n.p,{children:"TODO"}),"\n",(0,r.jsx)(n.h2,{id:"how-to-add-new-task",children:"How to add new task"}),"\n",(0,r.jsxs)(n.p,{children:["To add a new experiment, simply create a new ",(0,r.jsx)(n.code,{children:".yml"})," file in the same folder as the other experiments. Gradle will automatically generate the tasks required to run the experiment."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/docs/tutorials/collektive-and-alchemist",children:"Using Collektive with Alchemist Simulator"})," section illustrates the process of creating a YAML configuration file and using it with Collektive."]}),"\n",(0,r.jsxs)(n.p,{children:["For more details, refer to the ",(0,r.jsx)(n.a,{href:"https://alchemistsimulator.github.io/",children:"Alchemist Simulator"})," documentation."]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(6540);const r={},a=i.createContext(r);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);