"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9054],{4302:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"explanation/aggregate-programming","title":"Building Resilient Systems with Aggregate Programming","description":"In most of distributed systems and Internet of Things (IoT) applications,","source":"@site/docs/explanation/aggregate-programming.mdx","sourceDirName":"explanation","slug":"/explanation/aggregate-programming","permalink":"/docs/explanation/aggregate-programming","draft":false,"unlisted":false,"editUrl":"https://github.com/Collektive/collektive/tree/master/site/docs/explanation/aggregate-programming.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Building Resilient Systems with Aggregate Programming","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Explanation","permalink":"/docs/category/explanation"},"next":{"title":"Levels of Abstraction in Aggregate Programming","permalink":"/docs/explanation/levels-of-abstractions"}}');var t=i(4848),s=i(8453);const a={title:"Building Resilient Systems with Aggregate Programming",sidebar_position:1},o="The Challenge of Building Resilient Systems",l={},c=[{value:"Aggregate Programming as a Relevant Approach",id:"aggregate-programming-as-a-relevant-approach",level:2},{value:"Key Properties of Aggregate Programming",id:"key-properties-of-aggregate-programming",level:3},{value:"Practical Applications of Aggregate Programming",id:"practical-applications-of-aggregate-programming",level:3}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",section:"section",strong:"strong",sup:"sup",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"the-challenge-of-building-resilient-systems",children:"The Challenge of Building Resilient Systems"})}),"\n",(0,t.jsxs)(n.p,{children:["In most of distributed systems and ",(0,t.jsx)(n.strong,{children:"Internet of Things"})," (IoT) applications,\nthe ",(0,t.jsx)(n.strong,{children:"dynamic nature"})," of the environment and the ",(0,t.jsx)(n.strong,{children:"unpredictable behavior"})," of individual devices pose significant challenges.\nOften these systems are composed of ",(0,t.jsx)(n.strong,{children:"heterogeneous"})," and ",(0,t.jsx)(n.strong,{children:"resource-constrained"})," devices,\nwhich may be ",(0,t.jsx)(n.strong,{children:"mobile"})," or ",(0,t.jsx)(n.strong,{children:"static"}),", and are subject to ",(0,t.jsx)(n.strong,{children:"frequent failures"})," and ",(0,t.jsx)(n.strong,{children:"topology changes"}),".\nAlso,\nit is common to assume that the devices must be connected to Internet to perform their tasks,\nbut this is not always the case.\nFor example, in ",(0,t.jsx)(n.strong,{children:"smart cities"})," or ",(0,t.jsx)(n.strong,{children:"smart agriculture"})," applications,\nthe devices may be deployed in remote areas with limited connectivity,\nor in ",(0,t.jsx)(n.strong,{children:"disaster recovery"})," scenarios where the network infrastructure is damaged."]}),"\n",(0,t.jsxs)(n.p,{children:["The heterogeneity of the devices can lead to different communication protocols and implementation of the same functionalities,\nwhich can make it difficult to achieve ",(0,t.jsx)(n.strong,{children:"interoperability"})," and ",(0,t.jsx)(n.strong,{children:"scalability"}),".\nIdeally,\nwe would like to have a single program that can run on all devices;\nwith this purpose in mind,\nwe can leverage on the ",(0,t.jsx)(n.strong,{children:"Aggregate Programming"})," paradigm."]}),"\n",(0,t.jsx)(n.h2,{id:"aggregate-programming-as-a-relevant-approach",children:"Aggregate Programming as a Relevant Approach"}),"\n",(0,t.jsxs)(n.p,{children:["In this context, ",(0,t.jsx)(n.strong,{children:"Aggregate Programming"}),(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})," (AP) emerges as a ",(0,t.jsx)(n.strong,{children:"relevant macroprogramming approach"}),". It is based on the ",(0,t.jsx)(n.strong,{children:"functional composition"})," of ",(0,t.jsx)(n.strong,{children:"reusable collective behavior blocks"}),", with the goal of efficiently achieving ",(0,t.jsx)(n.strong,{children:"complex"})," and ",(0,t.jsx)(n.strong,{children:"resilient behaviors"})," in ",(0,t.jsx)(n.strong,{children:"dynamic networks"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"key-properties-of-aggregate-programming",children:"Key Properties of Aggregate Programming"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Self-organization"}),": the system as a whole is capable of achieving globally coordinated behaviors through decentralized interactions among individual devices.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Self-coordination"}),": devices autonomously exchange information and adapt their behavior to maintain coherence, even in the absence of centralized control;"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Self-stabilization"}),": the system naturally converges to a desired stable state despite transient disruptions or changes in the network."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Resilience"}),": the system is inherently robust to node failures, dynamic topology changes, and unpredictable environmental conditions (e.g., wireless interference, sudden weather changes affecting sensor networks, or physical obstacles disrupting communication), ensuring continued functionality under adverse circumstances."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scalability"}),": the system can efficiently handle a growing number of devices while maintaining low communication overhead and computational efficiency. As the network size increases, the system continues to provide predictable response times and stable resource consumption, ensuring overall performance in terms of latency, throughput, and fault tolerance."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Aggregate programming finds its conceptual roots in ",(0,t.jsx)(n.strong,{children:"Field Calculus"}),(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-3",id:"user-content-fnref-3","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})}),"(FC), a minimal functional programming language designed for the specification and composition of collective behaviors. FC provides a formal framework for expressing distributed algorithms in terms of computational fields, enabling concise and declarative descriptions of large-scale system behaviors."]}),"\n",(0,t.jsxs)(n.p,{children:["Building on this foundation, Aggregate Programming defines ",(0,t.jsx)(n.strong,{children:"basic building blocks"}),", which serve as foundational mechanisms for collective behavior."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, ",(0,t.jsx)(n.strong,{children:"broadcasting"})," and ",(0,t.jsx)(n.strong,{children:"gradient formation"})," are widely applied in sensor networks to propagate information efficiently."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Event detection"})," and ",(0,t.jsx)(n.strong,{children:"consensus"})," play a crucial role in distributed monitoring systems, enabling nodes to agree on the occurrence of specific conditions despite local disruptions."]}),"\n",(0,t.jsxs)(n.p,{children:["Similarly, ",(0,t.jsx)(n.strong,{children:"clustering"})," and ",(0,t.jsx)(n.strong,{children:"leader election"})," are essential in ad-hoc mobile networks to establish hierarchical structures and coordinate actions."]}),"\n",(0,t.jsx)(n.p,{children:"These building blocks lay the groundwork for more advanced and resilient applications across dynamic and large-scale environments."}),"\n",(0,t.jsx)(n.h3,{id:"practical-applications-of-aggregate-programming",children:"Practical Applications of Aggregate Programming"}),"\n",(0,t.jsx)(n.p,{children:"Aggregate Programming has demonstrated its versatility in solving complex coordination problems in distributed systems. Practical use cases include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Robot Swarms"}),(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-4",id:"user-content-fnref-4","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"3"})}),": AP enables coordinated behavior in fleets of autonomous robot, such as formation control, coverage, and search-and-rescue operations, where dynamic and resilient coordination is required."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Crowd Management"}),(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-5",id:"user-content-fnref-5","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"4"})}),": AP supports applications for monitoring and controlling crowds, including density estimation, anomaly detection, and safe dispersal strategies in large-scale events or emergency scenarios."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environmental Monitoring"}),": sensor networks employing AP can collectively estimate parameters like pollution levels, temperature gradients, or wildfire spread by aggregating local measurements efficiently."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Vascular Morphogenesis"}),(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-2",id:"user-content-fnref-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"5"})}),": an early application of AP was demonstrated in the context of vascular morphogenesis, where Collektive was used to model self-organizing biological patterns."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These examples highlight how Aggregate Programming simplifies the design and implementation of robust, scalable, and adaptive behaviors in dynamic and decentralized systems."}),"\n",(0,t.jsx)(n.hr,{}),"\n","\n",(0,t.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,t.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"http://dx.doi.org/10.1109/MC.2015.261",children:"J. Beal, D. Pianini, and M. Viroli, \u201cAggregate Programming for the Internet of Things\u201d, 2015"}),". ",(0,t.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{id:"user-content-fn-3",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://doi.org/10.1007/978-3-319-92408-3_1",children:"G. Audrito, J. Beal, F. Damiani, and M. Viroli, \u201cSpace-Time Universality of Field Calculus\u201d, 2018"}),". ",(0,t.jsx)(n.a,{href:"#user-content-fnref-3","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{id:"user-content-fn-4",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://doi.org/10.1007/s11721-022-00215-y",children:"G. Aguzzi, G. Audrito, R. Casadei, F. Damiani, G. Torta, and M. Viroli, \u201cA field-based computing approach to sensing-driven clustering in robot swarms\u201d, 2022"}),". ",(0,t.jsx)(n.a,{href:"#user-content-fnref-4","data-footnote-backref":"","aria-label":"Back to reference 3",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{id:"user-content-fn-5",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://doi.org/10.1007/978-3-319-03260-3_18",children:"B. Anzengruber, D. Pianini, J. Nieminen, and A. Ferscha, \u201cPredicting Social Density in Mass Events to Prevent Crowd Disasters\u201d, 2013"}),". ",(0,t.jsx)(n.a,{href:"#user-content-fnref-5","data-footnote-backref":"","aria-label":"Back to reference 4",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{id:"user-content-fn-2",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://doi.org/10.1109/ACSOS61780.2024.00032",children:"A. Cortecchia, D. Pianini, G. Ciatto, and R. Casadei, \u201cAn Aggregate Vascular Morphogenesis Controller for Engineered Self-Organising Spatial Structures\u201d, 2024"}),". ",(0,t.jsx)(n.a,{href:"#user-content-fnref-2","data-footnote-backref":"","aria-label":"Back to reference 5",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(6540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);