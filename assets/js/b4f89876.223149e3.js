"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5431],{6984:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"project-structure","title":"Project Structure","description":"Project submodules","source":"@site/docs/project-structure.mdx","sourceDirName":".","slug":"/project-structure","permalink":"/docs/project-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/Collektive/collektive/tree/master/site/docs/project-structure.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Project Structure","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"References","permalink":"/docs/references"},"next":{"title":"Showcase","permalink":"/docs/category/showcase"}}');var r=i(4848),s=i(8453);const o={title:"Project Structure",sidebar_position:5},c=void 0,l={},a=[{value:"Project submodules",id:"project-submodules",level:2}];function d(e){const t={h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"project-submodules",children:"Project submodules"}),"\n",(0,r.jsx)(t.p,{children:"The Collektive project is organized into several submodules, each serving a distinct role:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"collektive-dsl"}),": the core implementation of the Domain-Specific Language (DSL) for aggregate computing,\nexposing the operators and logic for this programming paradigm."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"collektive-stdlib"}),": a standard library providing essential functions and utilities to support aggregate computing operations."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"collektive-compiler-plugin"})," is divided into two components:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"frontend"}),": checks for dangerous or inappropriate code written using the Collektive DSL"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"backend"}),": a compiler plugin that modifies a data structure used to track the runtime stack.\nEach time a function is called, its name is registered in this structure."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"collektive-compiler-embeddable"}),":","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"compiler-embedded"}),": an embeddable version of the compiler designed for integration into other projects.\nThis allows developers to leverage the compiler\u2019s capabilities directly within their applications,\nmaking it easier to extend and customize compilation features."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"collektive-gradle-plugin"}),": a necessary plugin that allows Gradle projects to include and apply the compiler plugin."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"alchemist-incarnation-collektive"}),": an incarnation of Collektive for the Alchemist simulator,\nwhich is a simulation framework for distributed systems."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var n=i(6540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);